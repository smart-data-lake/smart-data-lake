name: Snapshot Build

on:
  push:
    branches:
      - 'develop-spark*'
  pull_request:
    branches:
      - 'develop-spark*'
    types: [opened, synchronize]
  # allow for manual snapshot releases from bugfix & feature branches
  # this extracts issue number from branch name as additional attribute in the created version, e.g. <mvnVersion>-<issueNb>-SNAPSHOT
  workflow_dispatch:
    inputs:
      skipBuild:
        description: 'skip build job'
        required: false
        type: boolean
        default: false
        
jobs:
  build:
    if: ${{ !inputs.skipBuild }}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: 17
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Build with Maven for Scala 2.12
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # to avoid running tests twice, phase 'compile' instead of 'test' is used, as tests are also executed by scoverage:report
      run: mvn -P scala-2.12,test-sonar -B clean compile scoverage:report -f pom.xml org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=smart-data-lake_smart-data-lake

    - name: Build with Maven for Scala 2.13
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      # scoverage and sonar are only run for scala-2.12 and not for scala-2.13.
      run: mvn -P scala-2.13 -B clean test -f pom.xml


  deploy:
    needs: build
    if: ${{ always() && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_ACTIONS }}      
      - name: Git Config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"          
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 17
      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Update version for SNAPSHOT releases from feature/bugfix branches with issue number from branch name
        if: ${{ startsWith(github.ref_name, 'feature') || startsWith(github.ref_name, 'bugfix')}}
        run: |
          MVN_CURRENT_VERSION=$(mvn -B -P scala-2.12 -f pom.xml -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
          BRANCH_ISSUE_NB_STR=$(echo $GITHUB_REF_NAME | sed -n 's/^.*\(feature\|bugfix\)\/\([0-9]*\).*$/-\2/p')
          MVN_NEW_VERSION=$(echo $MVN_CURRENT_VERSION | sed -n "s/-SNAPSHOT$/${BRANCH_ISSUE_NB_STR}-SNAPSHOT/p")
          if [ -z "$MVN_NEW_VERSION" ]; then exit -1; fi
          echo "setting version to $MVN_NEW_VERSION"
          mvn versions:set -B -DnewVersion=${MVN_NEW_VERSION} -f pom.xml

      - name: Maven deploy to sonatype for Scala 2.12
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.SONATYPE_USERNAME }}
          nexus_password: ${{ secrets.SONATYPE_PASSWORD }}
          maven_profiles: scala-2.12,release-sonatype
          maven_args: -B -DskipTests -f pom.xml

      - name: Maven deploy to sonatype for Scala 2.13
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.SONATYPE_USERNAME }}
          nexus_password: ${{ secrets.SONATYPE_PASSWORD }}
          maven_profiles: scala-2.13,release-sonatype
          # exclude sdl-parent as it is already uploaded with previous deploy, stays the same and cannot be replaced in remote repository
          maven_args: -B -DskipTests -pl '!.' -f pom.xml

      - name: Maven Get Version
        run: echo MVN_CURRENT_VERSION=$(mvn -B -P scala-2.12 -f pom.xml -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec) >> $GITHUB_ENV

      - name: Push new sdl-schema.json to documentation branch
        if: ${{ contains(github.base_ref, 'develop-spark') || contains(github.ref, 'develop-spark')}}
        run: |
          git fetch origin documentation
          git checkout documentation
          # note that sdl-schema.json should be available in the location below from the previous maven build.
          mv sdl-lang/target/classes/sdl-schema.json static/json-schema-viewer/schemas/sdl-schema-${MVN_CURRENT_VERSION}.json
          git add static/json-schema-viewer/schemas/sdl-schema-${MVN_CURRENT_VERSION}.json
          git diff-index --quiet HEAD || git commit -m "Update sdl-schema-${MVN_CURRENT_VERSION}.json" # only if there is something to commit
          git push
