global {
  statusInfo {
    stopOnEnd = false
    port = 4440
  }

}

dataObjects {

  dataObjectCsv1 {
    type = CsvFileDataObject
    path = "~{id}"
    csv-options {
      delimiter = ","
      header = true
      mode = failfast
    }
    schema = """a string, b string, c string"""
  }

  dataObjectCsv2 {
    type = CsvFileDataObject
    path = "~{id}"
    csv-options {
      delimiter = ","
      header = true
      mode = failfast
    }
    schema = """a string, b string, c string"""
  }

  dataObjectCsv3 {
    type = CsvFileDataObject
    path = "~{id}"
    csv-options {
      delimiter = ","
      header = true
      mode = failfast
    }
    schema = """a string, b string, c string"""
  }

  dataObjectCsv4 {
    type = CsvFileDataObject
    path = "~{id}"
    csv-options {
      delimiter = ","
      header = true
      mode = failfast
    }
    schema = """a string, b string, c string"""
  }

  dataObjectCsv5 {
    type = CsvFileDataObject
    path = "~{id}"
    csv-options {
      delimiter = ","
      header = true
      mode = failfast
    }
    schema = """a string, b string, c string"""
  }

  dataObjectParquet6 {
    type = ParquetFileDataObject
    path = "~{id}"
    schema = """a string, b string, c string"""
  }

  dataObjectParquet7 {
    type = ParquetFileDataObject
    path = "~{id}"
    schema = """a string, b string, c string"""
  }
  dataObjectParquet8 {
    type = ParquetFileDataObject
    path = "~{id}"
    schema = """a string, b string, c string"""
  }

  dataObjectParquet9 {
    type = ParquetFileDataObject
    path = "~{id}"
    schema = """a string, b string, c string"""
  }

  dataObjectParquet10 {
    type = ParquetFileDataObject
    path = "~{id}"
    schema = """a string, b string, c string"""
  }
  dataObjectParquet11 {
    type = ParquetFileDataObject
    path = "~{id}"
    schema = """a string, b string, c string"""
  }
  dataObjectParquet12 {
    type = ParquetFileDataObject
    path = "~{id}"
    schema = """a string, b string, c string"""
  }
  dataObjectParquet13 {
    type = ParquetFileDataObject
    path = "~{id}"
    schema = """a string, b string, c string"""
  }
}

actions {
  actionId1 {
    type = CustomSparkAction
    inputIds = [dataObjectCsv1, dataObjectCsv2]
    outputIds = [dataObjectParquet6]
    transformers = [{
      type = ScalaCodeDfsTransformer
      code = """
        import org.apache.spark.sql.{DataFrame, SparkSession}
        import org.apache.spark.sql.functions._

        (session: SparkSession, options: Map[String,String], dfs: Map[String,DataFrame]) => {
          import session.implicits._
          val df = dfs("dataObjectCsv1")
          Map("dataObjectParquet6" -> df)
        }
      """
    }]
    metadata.feed = actionId
  }

  actionId2 {
    type = CopyAction
    inputId = dataObjectParquet6
    outputId = dataObjectParquet7
    metadata.feed = actionId
  }

  actionId3 {
    type = CopyAction
    inputId = dataObjectCsv3
    outputId = dataObjectParquet7
    metadata.feed = actionId
  }

  actionId4 {
    type = CustomSparkAction
    inputIds = [dataObjectParquet7, dataObjectParquet8]
    outputIds = [dataObjectParquet9]
    transformers = [{
      type = ScalaCodeDfsTransformer
      code = """
        import org.apache.spark.sql.{DataFrame, SparkSession}
        import org.apache.spark.sql.functions._

        (session: SparkSession, options: Map[String,String], dfs: Map[String,DataFrame]) => {
          import session.implicits._
          val df = dfs("dataObjectParquet7")
          Map("dataObjectParquet9" -> df)
        }
      """
    }]
    metadata.feed = actionId
  }

  actionId5 {
    type = CustomSparkAction
    inputIds = [dataObjectCsv4]
    outputIds = [dataObjectParquet9, dataObjectParquet10]
    transformers = [{
      type = ScalaCodeDfsTransformer
      code = """
        import org.apache.spark.sql.{DataFrame, SparkSession}
        import org.apache.spark.sql.functions._

        (session: SparkSession, options: Map[String,String], dfs: Map[String,DataFrame]) => {
          import session.implicits._
          val df = dfs("dataObjectCsv4")
          Map("dataObjectParquet9" -> df, "dataObjectParquet10" -> df)
        }
      """
    }]
    metadata.feed = actionId
  }

  actionId6 {
    type = CustomSparkAction
    inputIds = [dataObjectParquet9, dataObjectParquet10]
    outputIds = [dataObjectCsv5]
    transformers = [{
      type = ScalaCodeDfsTransformer
      code = """
        import org.apache.spark.sql.{DataFrame, SparkSession}
        import org.apache.spark.sql.functions._

        (session: SparkSession, options: Map[String,String], dfs: Map[String,DataFrame]) => {
          import session.implicits._
          val df = dfs("dataObjectParquet9")
          Map("dataObjectCsv5" -> df)
        }
      """
    }]
    metadata.feed = actionId
  }

  actionId7 {
    type = CopyAction
    inputId = dataObjectParquet11
    outputId = dataObjectParquet12
    metadata.feed = actionId
  }

  actionId8 {
    type = CopyAction
    inputId = dataObjectParquet12
    outputId = dataObjectParquet13
    metadata.feed = actionId
  }


}
