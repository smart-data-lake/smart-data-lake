"use strict";(self.webpackChunksmart_data_lake=self.webpackChunksmart_data_lake||[]).push([[3061],{4102:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var i=n(4848),a=n(8453);const o={id:"executionPhases",title:"Execution Phases"},s=void 0,r={id:"reference/executionPhases",title:"Execution Phases",description:"Early validation",source:"@site/docs/reference/executionPhases.md",sourceDirName:"reference",slug:"/reference/executionPhases",permalink:"/docs/reference/executionPhases",draft:!1,unlisted:!1,editUrl:"https://github.com/smart-data-lake/smart-data-lake/tree/documentation/docs/reference/executionPhases.md",tags:[],version:"current",frontMatter:{id:"executionPhases",title:"Execution Phases"},sidebar:"tutorialSidebar",previous:{title:"Data Quality",permalink:"/docs/reference/dataQuality"},next:{title:"Execution Engines",permalink:"/docs/reference/executionEngines"}},l={},c=[{value:"Early validation",id:"early-validation",level:3},{value:"Implications",id:"implications",level:3},{value:"Early validation",id:"early-validation-1",level:4},{value:"No data during Init Phase",id:"no-data-during-init-phase",level:4},{value:"How does the Init Phase work for Spark Actions?",id:"how-does-the-init-phase-work-for-spark-actions",level:4},{value:"Watch the log output",id:"watch-the-log-output",level:4}];function d(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h3,{id:"early-validation",children:"Early validation"}),"\n",(0,i.jsx)(t.p,{children:'Execution of a SmartDataLakeBuilder run is designed with "early validation" in mind. This means it tries to fail as early as possible if something is wrong.'}),"\n",(0,i.jsx)(t.p,{children:"The following phases are involved during each execution:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Parse configuration"}),":",(0,i.jsx)(t.br,{}),"\n","Parses and validates your configuration files.\nThis step fails if there is anything wrong with your configuration, i.e. if a required attribute is missing or a whole block like ",(0,i.jsx)(t.code,{children:"actions {}"})," is missing or misspelled.\nThere's also a neat feature that will warn you of typos and will suggest spelling corrections if it can."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"DAG prepare:"}),(0,i.jsx)(t.br,{}),"\n","Preconditions are validated.\nThis includes testing Connections and DataObject structures that must exists."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"DAG init:"}),(0,i.jsx)(t.br,{}),"\n","Creates and validates the whole lineage of Actions according to the DAG.\nFor Spark Actions this involves the validation of the DataFrame lineage.\nA column which doesn't exist but is referenced in a later Action will fail the execution."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"DAG exec"}),":",(0,i.jsx)(t.br,{}),"\n","Apply ",(0,i.jsx)(t.a,{href:"/docs/reference/executionModes",children:"Execution Modes"})," to select data and execute Actions.\nData is effectively transferred in this phase (and only in this phase!)."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"implications",children:"Implications"}),"\n",(0,i.jsx)(t.h4,{id:"early-validation-1",children:"Early validation"}),"\n",(0,i.jsxs)(t.p,{children:["As mentioned, especially the init phase is very powerful as SDL will validate your whole lineage.\nThis even includes custom transformations you have in your pipeline.",(0,i.jsx)(t.br,{}),"\n","So if you have a typo in a column name or reference a column that will not exist at that state in the pipeline,\nSDL will report this error and fail within seconds.\nThis saves a lot of time as you don't have to wait for the whole pipeline to execute to catch these errors."]}),"\n",(0,i.jsx)(t.h4,{id:"no-data-during-init-phase",children:"No data during Init Phase"}),"\n",(0,i.jsxs)(t.p,{children:["At one point you will start implementing your own transformers.\nWhen analyzing problems you will want to debug them and most likely set break points somewhere in the ",(0,i.jsx)(t.code,{children:"transform"})," method.\nIt's important to know, that execution will pass your break point twice:",(0,i.jsx)(t.br,{}),"\n","Once during the ",(0,i.jsx)(t.code,{children:"init"})," phase, once during ",(0,i.jsx)(t.code,{children:"exec"})," phase.\nIn the ",(0,i.jsx)(t.code,{children:"init"})," phase, the whole execution is validated but without actually moving any data.\nIf you take a look at your DataFrames at this point, it will be empty.\nWe can guarantee that you will fall into this trap at least once. ;-)"]}),"\n",(0,i.jsxs)(t.admonition,{type:"caution",children:[(0,i.jsx)(t.p,{children:"If you debug your code and wonder why your DataFrame is completely empty,\nyou probably stopped execution during init phase."}),(0,i.jsx)(t.p,{children:"Continue execution and make sure you're in the exec phase before taking a look at data in your DataFrame."})]}),"\n",(0,i.jsx)(t.h4,{id:"how-does-the-init-phase-work-for-spark-actions",children:"How does the Init Phase work for Spark Actions?"}),"\n",(0,i.jsxs)(t.p,{children:["During the Init Phase, the whole Spark DAG is evaluated by executing all the code of the SDLB Actions, but without executing any Spark Action\nsuch as show, count, write... See ",(0,i.jsx)(t.a,{href:"https://supergloo.com/spark-scala/spark-actions",children:"this spark tutorial for more on Spark Actions"}),".\nThis is how in the Init Phase SDLB is able to check your lineage for Spark Actions. Basically, it relies on Spark to check the execution DAG under the hood.\nIf you add Spark-Actions in your Custom Transformers (which is considered bad practice in most cases), you basically break that mechanism."]}),"\n",(0,i.jsx)(t.h4,{id:"watch-the-log-output",children:"Watch the log output"}),"\n",(0,i.jsxs)(t.p,{children:["The stages are also clearly marked in the log output.\nHere is the sample output of ",(0,i.jsx)(t.a,{href:"/docs/getting-started/part-3/custom-webservice",children:"part-3 of the gettings-started guide"})," again with a few things removed:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Action~download-departures[CopyAction]: Prepare started\nAction~download-departures[CopyAction]: Prepare succeeded\nAction~download-departures[CopyAction]: Init started\nAction~download-departures[CopyAction]: Init succeeded\nAction~download-departures[CopyAction]: Exec started\n...\n"})}),"\n",(0,i.jsx)(t.p,{children:"If execution stops, always check during which phase that happens.\nIf it happens while still in the init phase, it probably has nothing to do with the data itself but more with the structure of your DataObjects."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var i=n(6540);const a={},o=i.createContext(a);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);