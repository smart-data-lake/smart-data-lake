"use strict";(self.webpackChunksmart_data_lake=self.webpackChunksmart_data_lake||[]).push([[5134],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),h=o,f=u["".concat(l,".").concat(h)]||u[h]||d[h]||r;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8911:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const r={title:"Get Airports"},i=void 0,s={unversionedId:"getting-started/part-1/get-airports",id:"getting-started/part-1/get-airports",title:"Get Airports",description:"Goal",source:"@site/docs/getting-started/part-1/get-airports.md",sourceDirName:"getting-started/part-1",slug:"/getting-started/part-1/get-airports",permalink:"/docs/getting-started/part-1/get-airports",draft:!1,editUrl:"https://github.com/smart-data-lake/smart-data-lake/tree/documentation/docs/getting-started/part-1/get-airports.md",tags:[],version:"current",frontMatter:{title:"Get Airports"},sidebar:"docs",previous:{title:"Get Departures",permalink:"/docs/getting-started/part-1/get-departures"},next:{title:"Select Columns",permalink:"/docs/getting-started/part-1/select-columns"}},l={},c=[{value:"Goal",id:"goal",level:2},{value:"Solution",id:"solution",level:2},{value:"Mess Up the Solution",id:"mess-up-the-solution",level:2},{value:"Try fixing it",id:"try-fixing-it",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"goal"},"Goal"),(0,o.kt)("p",null,"In this step, we will download airports master data from the website described in ",(0,o.kt)("a",{parentName:"p",href:"../get-input-data"},"Inputs"),' using Smart Data Lake Builder.\nBecause this step is very similar to the previous one, we will make some "mistake" on purpose to demonstrate how to deal with config errors.'),(0,o.kt)("p",null,"Just like in the previous step, we need one action and two DataObjects.\nExcept for the object and action names, the config to add here is almost identical to the previous step."),(0,o.kt)("p",null,'You are welcome to try to implement it yourself before continuing.\nJust as in the previous step, you can use "download" as feed name.'),(0,o.kt)("h2",{id:"solution"},"Solution"),(0,o.kt)("p",null,"You should now have a file similar to ",(0,o.kt)("a",{target:"_blank",href:n(578).Z},"this")," one.\nThe only notable difference is that you had to use the type ",(0,o.kt)("strong",{parentName:"p"},"CsvFileDataObject")," for the airports.csv file,\nsince this is what the second webservice answers with.\nNote that you would not get an error at this point if you had chosen another file format.\nSince we use ",(0,o.kt)("em",{parentName:"p"},"FileTransferAction")," in both cases, the files are copied without the content being interpreted yet."),(0,o.kt)("p",null,"You can start the same ",(0,o.kt)("inlineCode",{parentName:"p"},"docker run")," command as before and you should see that both directories\n",(0,o.kt)("em",{parentName:"p"},"stg-airports")," and ",(0,o.kt)("em",{parentName:"p"},"stg-departures")," have new files now.\nNotice that since both actions have the same feed, the option ",(0,o.kt)("inlineCode",{parentName:"p"},"--feed-sel download")," executes both of them."),(0,o.kt)("h2",{id:"mess-up-the-solution"},"Mess Up the Solution"),(0,o.kt)("p",null,"Now let's see what happens when things don't go as planned.\nFor that, replace your config file with the contents of ",(0,o.kt)("a",{target:"_blank",href:n(2174).Z},"this")," file.\nWhen you start the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker run")," command again, you will see two errors:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},'The name of the DataObject "NOPEext-departures" does not match with the inputId of the action download-departures.\nThis is a very common error and the stacktrace should help you to quickly find and correct it')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Exception in thread "main" io.smartdatalake.config.ConfigurationException: (Action~download-departures) [] key not found: DataObject~ext-departures\n')),(0,o.kt)("p",null,"As noted before, SDL will often use Action-IDs and DataObject-IDs to communicate where to look in your configuration files."),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"An unknown DataObject type was used. In this example, stg-airports was assigned the type UnicornFileDataObject, which does not exist.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Exception in thread "main" io.smartdatalake.config.ConfigurationException: (DataObject~stg-airports) ClassNotFoundException: io.smartdatalake.workflow.dataobject.UnicornFileDataObject\n')),(0,o.kt)("p",null,"Internally, the types you choose are represented by Scala Classes.\nThese classes define all characteristics of a DataObject and all it's parameters, i.e. the url we defined in our WebserviceFileDataObject.\nThis also explains why you get a ",(0,o.kt)("em",{parentName:"p"},"ClassNotFoundException")," in this case."),(0,o.kt)("h2",{id:"try-fixing-it"},"Try fixing it"),(0,o.kt)("p",null,"Try to fix one of the errors and keep the other one to see what happens: Nothing.\nWhy is that? "),(0,o.kt)("p",null,"SDL validates your configuration file(s) before executing it's contents.\nIf the configuration does not make sense, it will abort before executing anything to minimize the chance that you'll end up in an inconsistent state."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"During validation, the whole configuration is checked, not just the parts you are trying to execute.\nIf you have large configuration files, it can sometimes be confusing to see an error and realize that\nit's not on the part you are currently working on but in a different section.")),(0,o.kt)("p",null,"SDL is built to detect configuration errors as early as possible (early-validation). It does this by going through several phases. "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Validate configuration",(0,o.kt)("br",{parentName:"li"}),"validate superfluous attributes, missing mandatory attributes, attribute content and consistency when referencing other configuration objects."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Prepare")," phase",(0,o.kt)("br",{parentName:"li"}),"validate preconditions, e.g. connections and existence of tables and directories."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Init")," phase",(0,o.kt)("br",{parentName:"li"}),"executes the whole feed ",(0,o.kt)("em",{parentName:"li"},"without any data")," to spot incompatibilities between the Data Objects that cannot be spotted\nby just looking at the config file. For example a column which doesn't exist but is referenced in a later Action will cause the init phase to fail."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Exec")," phase",(0,o.kt)("br",{parentName:"li"}),"only if all previous phases have been passed successfully, execution is started.")),(0,o.kt)("p",null,'When running SDL, you can clearly find "prepare", "init" and "exec" steps for every Action in the logs.'),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/executionPhases"},"this page")," for a detailed description on the execution phases of SDL."),(0,o.kt)("p",null,"Now is a good time to fix both errors in your configuration file and execute the action again."),(0,o.kt)("p",null,"Early-validation is a core feature of SDL and will become more and more valuable with the increasing complexity of your data pipelines.\nSpeaking of increasing complexity: In the next step, we will begin transforming our data."))}d.isMDXComponent=!0},2174:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/application-part1-download-errors-c58d16b83ba67fddae6f51d488186c3b.conf"},578:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/application-part1-download-3dcce84565d5ad72009e015562a85166.conf"}}]);