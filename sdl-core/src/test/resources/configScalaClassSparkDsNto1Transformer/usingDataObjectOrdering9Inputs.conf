actions {
  double_rating {
    type = CustomDataFrameAction
    inputIds = [src1, src2, src3, src4, src5, src6, src7, src8, src9] //Ordering in inputIds list has to match order of parameters in transform method, but the parameter names can be named freely with this option
    outputIds = [tgt1]
    metadata.feed = test_feed_name
    transformers = [
      {type = ScalaClassSparkDsNTo1Transformer, className = io.smartdatalake.workflow.action.Ds9To1Transformer, parameterResolution = DataObjectOrdering}
    ]
  }
}

dataObjects {
  src1 {
    type = CsvFileDataObject
    path = "target/src1DsNto1"
    schema = """name string, rating int"""
  }
  src2 {
    type = CsvFileDataObject
    path = "target/src2DsNto1"
    schema = """name string, rating int"""
  }
  src3 {
    type = CsvFileDataObject
    path = "target/src3DsNto1"
    schema = """name string, rating int"""
  }
  src4 {
    type = CsvFileDataObject
    path = "target/src4DsNto1"
    schema = """name string, rating int"""
  }
  src5 {
    type = CsvFileDataObject
    path = "target/src5DsNto1"
    schema = """name string, rating int"""
  }
  src6 {
    type = CsvFileDataObject
    path = "target/src6DsNto1"
    schema = """name string, rating int"""
  }
  src7 {
    type = CsvFileDataObject
    path = "target/src7DsNto1"
    schema = """name string, rating int"""
  }
  src8 {
    type = CsvFileDataObject
    path = "target/src8DsNto1"
    schema = """name string, rating int"""
  }
  src9 {
    type = CsvFileDataObject
    path = "target/src9DsNto1"
    schema = """name string, rating int"""
  }
  tgt1 {
    type = CsvFileDataObject
    path = "target/tgt1Ds2to1"
  }
}