actions {
  double_rating {
    type = CustomDataFrameAction
    inputIds = [src1DS, src2DS, src3DS, src4DS, src5DS, src6DS, src7DS, src8DS, src9DS] //Ordering in inputIds list has to match order of parameters in transform method, but the parameter names can be named freely with this option
    outputIds = [tgt1DS]
    metadata.feed = test_feed_name
    transformers = [
      {type = ScalaClassSparkDsNTo1Transformer, className = io.smartdatalake.workflow.action.TestResolutionByOrderingDS2To1Transformer, options = {"parameterResolution" = "dataObjectOrdering"}}
    ]
  }
}

dataObjects {
  src1DS {
    type = CsvFileDataObject
    path = "target/src1DS2to1"
    schema = """name string, rating int"""
  }
  src2DS {
    type = CsvFileDataObject
    path = "target/src2DS2to1"
    schema = """name string, rating int"""
  }
  src3DS {
    type = CsvFileDataObject
    path = "target/src1DS2to1"
    schema = """name string, rating int"""
  }
  src4DS {
    type = CsvFileDataObject
    path = "target/src2DS2to1"
    schema = """name string, rating int"""
  }
  src5DS {
    type = CsvFileDataObject
    path = "target/src1DS2to1"
    schema = """name string, rating int"""
  }
  src6DS {
    type = CsvFileDataObject
    path = "target/src2DS2to1"
    schema = """name string, rating int"""
  }
  src7DS {
    type = CsvFileDataObject
    path = "target/src1DS2to1"
    schema = """name string, rating int"""
  }
  src8DS {
    type = CsvFileDataObject
    path = "target/src2DS2to1"
    schema = """name string, rating int"""
  }
  src9DS {
    type = CsvFileDataObject
    path = "target/src2DS2to1"
    schema = """name string, rating int"""
  }
  tgt1DS {
    type = CsvFileDataObject
    path = "target/tgt1DS2to1"
  }
}