<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.smartdatalake.ch/blog</id>
    <title>Smart Data Lake Builder Blog</title>
    <updated>2022-03-30T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.smartdatalake.ch/blog"/>
    <subtitle>Smart Data Lake Builder Blog</subtitle>
    <icon>https://www.smartdatalake.ch/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Using Airbyte connector to inspect github data]]></title>
        <id>sdl-airbyte</id>
        <link href="https://www.smartdatalake.ch/blog/sdl-airbyte"/>
        <updated>2022-03-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A short example using Airbyte github connector]]></summary>
        <content type="html"><![CDATA[<p>This article presents the deployment of an <a href="https://airbyte.com" target="_blank" rel="noopener noreferrer">Airbyte Connector</a> with Smart Data Lake Builder (SDLB).
In particular the <a href="https://docs.airbyte.com/integrations/sources/github" target="_blank" rel="noopener noreferrer">github connector</a> is implemented using the python sources.</p><p>Airbyte is a framework to sync data from a variety of sources (APIs and databases) into data warehouses and data lakes.
In this example an Airbyte connector is utilized to stream data into Smart Data Lake (SDL).
Therefore, the <a href="http://smartdatalake.ch/json-schema-viewer/index.html#viewer-page?v=2-2" target="_blank" rel="noopener noreferrer">Airbyte dataObject</a> is used and will be configured.
The general <a href="https://docs.airbyte.com/understanding-airbyte/airbyte-specification#source" target="_blank" rel="noopener noreferrer">Airbyte connector handling</a> is implemented in SDL, which includes the 4 main steps:</p><ul><li><code>spec</code>: receiving the specification of the connector</li><li><code>check</code>: validating the specified configuration</li><li><code>discover</code>: gather a catalog of available streams and its schemas</li><li><code>read</code>: collect the actual data</li></ul><p>The actual connector is not provided in the SDL repository and needs to be obtained from the <a href="https://github.com/airbytehq/airbyte" target="_blank" rel="noopener noreferrer">Airbyte repository</a>. Besides the <a href="https://docs.airbyte.com/integrations" target="_blank" rel="noopener noreferrer">list of existing connectors</a>, custom connectors could be implemented in Python or Javascript. </p><p>The following description builds on top of the example setup from the <a href="/docs/getting-started/setup">getting-started</a> guide, using <a href="https://docs.podman.io" target="_blank" rel="noopener noreferrer">Podman</a> as container engine within a <a href="https://docs.microsoft.com/en-us/windows/wsl/install" target="_blank" rel="noopener noreferrer">WSL</a> Ubuntu image. </p><p>The <a href="https://docs.airbyte.com/integrations/sources/github" target="_blank" rel="noopener noreferrer">github connector</a> is utilized to gather data about a specific repository.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="prerequisites">Prerequisites<a class="hash-link" href="#prerequisites" title="Direct link to heading">​</a></h2><p>After downloading and installing all necessary packages, the connector is briefly tested:</p><ul><li>Python</li><li><a href="/docs/getting-started/troubleshooting/docker-on-windows">Podman including <code>podman-compose</code></a> or <a href="https://www.docker.com/get-started" target="_blank" rel="noopener noreferrer">Docker</a></li><li><a href="https://github.com/smart-data-lake/getting-started/archive/refs/heads/master.zip" target="_blank" rel="noopener noreferrer">SDL example</a>, download and unpack: <div class="codeBlockContainer_I0IT language-Bash theme-code-block"><div class="codeBlockContent_wNvx Bash"><pre tabindex="0" class="prism-code language-Bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://github.com/smart-data-lake/getting-started.git SDL_airbyte</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd SDL_airbyte</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li>download the <a href="https://github.com/airbytehq/airbyte" target="_blank" rel="noopener noreferrer">Airbyte repository</a> <div class="codeBlockContainer_I0IT language-Bash theme-code-block"><div class="codeBlockContent_wNvx Bash"><pre tabindex="0" class="prism-code language-Bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://github.com/airbytehq/airbyte.git</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div>Alternatively, only the target connector can be downloaded:<div class="codeBlockContainer_I0IT language-Bash theme-code-block"><div class="codeBlockContent_wNvx Bash"><pre tabindex="0" class="prism-code language-Bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">svn checkout https://github.com/airbytehq/airbyte/trunk/airbyte-integrations/connectors/source-github</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div>Here the Airbyte <code>airbyte/airbyte-integrations/connectors/source-github/</code> directory is copied into the <code>SDL_airbyte</code> directory for handy calling the connector.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="optional-inspect-the-connector-specification">[Optional]<!-- --> Inspect the connector specification<a class="hash-link" href="#optional-inspect-the-connector-specification" title="Direct link to heading">​</a></h2><p>The first connector command <code>spec</code> provides the connector specification. This is the basis to create a connector configuration. To run the connector as is, the Python <code>airbyte-cdk</code> package needs to be installed and the connector can be launched:</p><ul><li>Install Python airbyte-cdk: <code>pip install airbyte_cdk</code></li><li>try the connector: <div class="codeBlockContainer_I0IT language-Bash theme-code-block"><div class="codeBlockContent_wNvx Bash"><pre tabindex="0" class="prism-code language-Bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">cd SDL_airbyte</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">python source_github/main.py spec | python -m json.tool</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div>This provides a <a target="_blank" href="/assets/files/github_spec_out-e78cbc05ed4f12e8414017c3698a8edb.json">JSON string</a> with the connector specification. The fields listed under <code>properties</code> are relevant for the configuration (compare with the configuration  used later). </li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="configuration">Configuration<a class="hash-link" href="#configuration" title="Direct link to heading">​</a></h2><p>To launch Smart Data Lake Builder (SDLB) with the Airbyte connector the following needs to be modified:</p><ul><li><p>add the Airbyte <strong><em>dataObject</em></strong> with its configuration to the <code>config/application.conf</code>:</p><div class="codeBlockContainer_I0IT language-Python theme-code-block"><div class="codeBlockContent_wNvx Python"><pre tabindex="0" class="prism-code language-Python codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">dataObjects {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ext-commits {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type = AirbyteDataObject</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    config = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "credentials": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "personal_access_token": "&lt;yourPersonalAccessToken&gt;" ### enter your personal access token here</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "repository": "smart-data-lake/smart-data-lake",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "start_date": "2021-02-01T00:00:00Z",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "branch": "documentation develop-spark3 develop-spark2",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "page_size_for_large_streams": 100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    streamName = "commits",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cmd = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type = CmdScript</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      name = "airbyte_connector_github"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      linuxCmd = "python3 /mnt/source-github/main.py"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  stg-commits {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   type = DeltaLakeTableDataObject</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   path = "~{id}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   table {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    db = "default"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name = "stg_commits"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    primaryKey = [created_at]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Note the options set for <code>ext-commits</code> which define the Airbyte connector settings.
While the <code>config</code> varies from connector to connector, the remaining fields are SDL specific.
The <code>streamName</code> selects the stream, exactly one.
If multiple streams should be collected, multiple dataObjects need to be defined.
In <code>linuxCmd</code> the actual connector script is called.
In our case we will mount the connector directory into the SDL container. </p></li><li><p>also add the definition of the data stream <strong><em>action</em></strong> to pipe the coming data stream into a <code>DeltaLakeTableDataObject</code>:</p><div class="codeBlockContainer_I0IT language-Bash theme-code-block"><div class="codeBlockContent_wNvx Bash"><pre tabindex="0" class="prism-code language-Bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">  actions {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    download-commits {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type = CopyAction</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      inputId = ext-commits</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      outputId = stg-commits</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      metadata {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        feed = download</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>Since Airbyte will be called as Python script in the sdl container, we need to (re-)build the container with Python support and the Python <code>airbyte-cdk</code> package.
Therefore, in the Dockerfile we add:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">RUN \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apt update &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apt --assume-yes install python3 python3-pip &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pip3 install airbyte-cdk~=0.1.25</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>and rebuild </p><div class="codeBlockContainer_I0IT language-Bash theme-code-block"><div class="codeBlockContent_wNvx Bash"><pre tabindex="0" class="prism-code language-Bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">podman build . -t sdl-spark</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li></ul><p>Now we are ready to go. My full <a target="_blank" href="/assets/files/application-b6a5a6494622e5ff40741395d829f558.conf">SDLB config file</a> additionally includes the pull-request stream.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="run-and-inspect-results">Run and inspect results<a class="hash-link" href="#run-and-inspect-results" title="Direct link to heading">​</a></h2><p>Since the data will be streamed into a <code>DeltaLakeTableDataObject</code>, the metastore container is necessary. Further, we aim to inspect the data using the Polynote notebook. Thus, first these containers are launched using (in the SDL example base directory):</p><div class="codeBlockContainer_I0IT language-Bash theme-code-block"><div class="codeBlockContent_wNvx Bash"><pre tabindex="0" class="prism-code language-Bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">podman-compose up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">podman pod ls</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>With the second command we can verify the pod name and both running containers in it (should be three including the infra container).</p><p>Then, the SDLB can be launched using the additional option to mount the Airbyte connector directory:</p><div class="codeBlockContainer_I0IT language-Bash theme-code-block"><div class="codeBlockContent_wNvx Bash"><pre tabindex="0" class="prism-code language-Bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">podman run --hostname localhost --rm --pod sdl_airbyte -v ${PWD}/source-github/:/mnt/source-github -v ${PWD}/data:/mnt/data -v ${PWD}/target:/mnt/lib -v ${PWD}/config:/mnt/config sdl-spark:latest --config /mnt/config --feed-sel download</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>The output presents the successful run of the workflow:</p><div class="codeBlockContainer_I0IT language-Bash theme-code-block"><div class="codeBlockContent_wNvx Bash"><pre tabindex="0" class="prism-code language-Bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">2022-03-16 07:54:03 INFO  ActionDAGRun$ActionEventListener - Action~download-commits[CopyAction]: Exec succeeded [dag-1-80]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2022-03-16 07:54:03 INFO  ActionDAGRun$ - exec SUCCEEDED for dag 1:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                 ┌─────┐</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                 │start│</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                 └───┬─┘</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                     │</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                     v</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ┌───────────────────────────────────────┐</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> │download-commits SUCCEEDED PT11.686865S│</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> └───────────────────────────────────────┘</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2022-03-16 07:54:03 INFO  LocalSmartDataLakeBuilder$ - LocalSmartDataLakeBuilder finished successfully: SUCCEEDED=1 [main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2022-03-16 07:54:03 INFO  SparkUI - Stopped Spark web UI at http://localhost:4040 [shutdown-hook-0]</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Launching Polynote <code>localhost:8192</code> in the browser, we can inspect data and develop further workflows. Here an example, where the commits are listed, which were committed in the name of someone else, excluding the web-flow. See <a target="_blank" href="/assets/files/SelectingData-fc913585bab1ef41a6b1f32ee50d5adb.ipynb">Polynote Notebook</a>
<img alt="polynote example" src="/assets/images/polynote_commits-0877fa6cab02c46db63471b8220af7ea.png" width="1018" height="810"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="summary">Summary<a class="hash-link" href="#summary" title="Direct link to heading">​</a></h2><p>The Airbyte connectors provide easy access to a variety of data sources. The connectors can be utilized in SDLB with just a few settings. This also works great for more complex interfaces.</p>]]></content>
        <author>
            <name>Mandes Schönherr</name>
            <uri>https://github.com/mand35</uri>
        </author>
        <category label="Airbyte" term="Airbyte"/>
        <category label="Connector" term="Connector"/>
    </entry>
</feed>